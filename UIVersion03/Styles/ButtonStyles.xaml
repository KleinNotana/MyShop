<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--Menu button-->
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal button style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="4,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <!--Activated button style-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu button icon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="35,0,20,0"/>
    </Style>

    <!--Menu button text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--Text button-->
    <Style x:Key="commonButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                         CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="normalButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource titleColor1}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsDefault" Value="True"/>
        <Setter Property="Background" Value="{StaticResource buttonColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="150" Height="40" CornerRadius="20" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource buttonColor2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Control bar button-->
    <Style x:Key="controlButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Menu button icon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>
    <!--Icon button-->
    <Style x:Key="iconButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="iconButton2" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Menu button icon-->
    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="DefaultCellStyle" TargetType="DataGridCell">
        <Setter Property="Background" Value="{StaticResource lightBackground}"/>

        <Setter Property="Foreground" Value="{StaticResource titleColor1}" />
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" 
            Grid.ColumnSpan="2"
            CornerRadius="5"
            BorderBrush="{StaticResource cs_BorderBrush}" 
            BorderThickness="2"
            SnapsToDevicePixels="true">
            </Border>
            <Border Grid.Column="1">
                <Path x:Name="Arrow" 
              Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
              Fill="{StaticResource cs_Clouds}" 
              Stretch="Fill"
              Height="7"
              Width="10"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource cs_PinkSoft}" TargetName="Border"/>
                <Setter Property="Fill" Value="{StaticResource cs_PinkSoft}" TargetName="Arrow"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource cs_PinkSoft}" TargetName="Border"/>
                <Setter Property="BorderThickness" Value="0.5 0.5 0.5 3" TargetName="Border"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
        Focusable="False"
        Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="Morrate"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="{StaticResource titleColor1}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                              Template="{StaticResource ComboBoxToggleButton}"
                              Grid.Column="2"
                              Focusable="False"
                              ClickMode="Press"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                                  IsHitTestVisible="False"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  Margin="11 0 25 0"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  IsEnabled="True"/>
                        <Label x:Name="Watermark"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Foreground="{StaticResource titleColor1}"
                       Visibility="Collapsed"
                       Padding="10 0 0 0"
                       Content="{TemplateBinding Tag}"
                       FontFamily="Roboto"
                       FontSize="11"/>
                        <TextBox x:Name="PART_EditableTextBox"
                         Template="{StaticResource ComboBoxTextBox}"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"
                         Focusable="True"
                         Visibility="Hidden"/>
                        <Popup x:Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                          SnapsToDevicePixels="True"
                          MinWidth="{TemplateBinding ActualWidth}"
                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                BorderThickness="1"
                                BorderBrush="{StaticResource cs_Background}"
                                Background="{StaticResource cs_PopupBackground}"/>
                                <ScrollViewer Margin="4 6 4 6"
                                      SnapsToDevicePixels="True"
                                      OverridesDefaultStyle="True"
                                      Foreground="{StaticResource titleColor1}"
                                      FontFamily="Roboto"
                                      FontSize="11"/>
                                <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Contained">

                                </StackPanel>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="Watermark"/>
                        </MultiTrigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0 2 0 0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    
    <!--Text box-->
    <Style x:Key="textBoxStyle1" TargetType="TextBox">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Foreground" Value="{StaticResource titleColor1}"/>
        <Setter Property="CaretBrush" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="{StaticResource titleColor2}"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="Padding" Value="20,0,0,0"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush Stretch="None" AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
    </Style>

    
    <ImageBrush x:Key="ic_search" Stretch="None" AlignmentX="Left" />
    <Style x:Key="textBoxStyle2" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Background" Value="{StaticResource cs_BorderBrush}"/>
        <Setter Property="Foreground" Value="Beige"/>
        <Setter Property="Padding" Value="0 5 5 4"/>
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="TxtBorder"
                        BorderBrush="{StaticResource cs_BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      Grid.Column="1"
                                      Margin="5 0 0 0"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                            <Border Background="{StaticResource ic_search}"
                                BorderThickness="0"
                                Height="15"
                                Width="15"
                                Margin="5 0 0 3"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ToolTip="Name"
                                Cursor="Arrow"
                                Grid.Column="0"/>
                            <Label x:Name="Watermark"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Foreground="{StaticResource titleColor1}"
                               Visibility="Collapsed"
                               Padding="5 0 20 0"
                               Content="{TemplateBinding Tag}"
                               Grid.Column="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource cs_PinkSoft}" TargetName="TxtBorder"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource cs_PinkSoft}" TargetName="TxtBorder"/>
                            <Setter Property="BorderThickness" Value="0.5 0.5 0.5 3" TargetName="TxtBorder"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="Watermark"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>